<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

	<!--usage of requiredAnnotation -->


<!-- this bean will work as expected ,injected all dependency -->
	<bean id="college" class="learning.spring.springcore.beans.College">
	<property name="student" ref="student"></property>
	<property name="studentAddress" ref="studentAddress"></property>
	<property name="collegeAddress" ref="collegeAddress"></property>
	</bean>

<!-- In this bean will skip student dependency,throws null pointer when using student reference in class 
To avoid this,we can perform check using @required annotation on setter method.
 when bean is created and it checks its dependencies and throw exception at beggning if it dont have any dependency injected
RequiredBeanPostProcessor,does those check : if we dont add this bean then it wont do check
-->
	<bean id="college-required-annotation" class="learning.spring.springcore.beans.College">
	<property name="studentAddress" ref="studentAddress"></property>
	<property name="collegeAddress" ref="collegeAddress"></property>
	</bean>

	<bean id="student" class="learning.spring.springcore.beans.Student" >
		<property name="name" value="${student1.name}" />
		<property name="rollNo" value="1" />
	</bean>
	
	<bean id="studentAddress" class="learning.spring.springcore.beans.Address">
		<property name="area" value="studentAddress" />
		<property name="pincode" value="583201" />
	</bean>


	<bean id="collegeAddress" class="learning.spring.springcore.beans.Address">
		<property name="area" value="CommonBean-collegeAdress" />
		<property name="pincode" value="583201" />
	</bean>


<!-- This class used to override property place holders and it looks property file by default in classpath -->
<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
<property name="locations" value="application.properties"></property>
</bean>

<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor" />

</beans>